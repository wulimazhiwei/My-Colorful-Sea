#### 跑了一段时间的数据库搭建主从系统的方法
1、MySQL开启binlog
2、导出当前时间的快照数据
mysqldump  -u ads -pads@1407 --single-transaction --master-data=2 ads > ads.sql
3、将上一步的数据拷贝到目标服务器，然后source导入
4、找到快照数据的binlog及复制位置
cat ads.sql  | grep "MASTER_LOG_FILE" 
-- CHANGE MASTER TO MASTER_LOG_FILE='mysql-bin.001392', MASTER_LOG_POS=23847988;
5、重新在从库上建立主从关系

#### 全新的数据库搭建主从系统的方法
1、申请两台服务器master（50.116.30.207）、slave（198.74.51.41）， 分别安装相同版本的数据库。
#https://vitux.com/how-to-install-and-configure-mysql-in-ubuntu-18-04-lts/
sudo apt-get install mysql-server
进入mysql：
SELECT user,authentication_string,plugin,host FROM mysql.user;
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'ios@1407#XN';
flush privileges;

安装后移除apparmor开机自启动，这是一个应用级的保护程序，会影响修改mysql数据存放地址后重启MySQL服务。
sudo update-rc.d -f apparmor remove
或者： vi /etc/apparmor.d/tunables/alias  修改datadir映射
alias /var/lib/mysql/ -> /srv/mysql/,

修改数据库配置，将数据存放地址为/srv/mysql，并将元数据库存放目录复制到/srv/中:
cp -rp /var/lib/mysql /srv

service apparmor restart

#/etc/apparmor.d/usr.sbin.mysqld 
# Allow data dir access
  /var/lib/mysql/ r,
  /var/lib/mysql/** rwk,

2、master数据库配置文件： vi /etc/mysql/mysql.conf.d/mysqld.cnf
[mysqld]
#master
#bind-address           = 127.0.0.1
server_id=1
log_bin = /var/log/mysql/mysql-bin.log
innodb_flush_log_at_trx_commit=1 
sync_binlog=1
expire_logs_days=7

重启数据库。
3、slave数据库配置文件： vi /etc/mysql/mysql.conf.d/mysqld.cnf
[mysqld]
# slave
server_id=2
read-only=1
super_read_only=1
relay-log = /var/log/mysql/mysql-relay-bin.log
log_bin = /var/log/mysql/mysql-bin.log

4、在master数据库里为slave数据库创建复制用户：
GRANT REPLICATION SLAVE ON *.* TO 'repl'@'198.74.51.41' identified by 'repl@1407';

5、show master status;
+------------------+----------+--------------+------------------+-------------------+
| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+------------------+----------+--------------+------------------+-------------------+
| mysql-bin.000380 |      154 |              |                  |                   |
+------------------+----------+--------------+------------------+-------------------+

6、在从库建立主从：
CHANGE MASTER TO MASTER_HOST='50.116.30.207',MASTER_USER='repl', MASTER_PASSWORD='repl@1407', MASTER_LOG_FILE='mysql-bin.000380', MASTER_LOG_POS= 154;

7、启动slave：
START SLAVE;
SHOW SLAVE STATUS\G
如果看到：
Slave_IO_Running: Yes
Slave_SQL_Running: Yes
说明配置成功。
#If there is an issue in connecting, you can try starting slave with a command to skip over it:
#SET GLOBAL SQL_SLAVE_SKIP_COUNTER = 1; SLAVE START; 

如果看到Last_IO_Error：
Fatal error: The slave I/O thread stops because master and slave have equal MySQL server UUIDs; these UUIDs must be different for replication to work.
这说明Master和Slave有 同样的server UUIDs，它存储在/var/lib/mysql/auto.cnf文件当中，这是因为在复制整个数据库文件的时候，从库的这个文件和主库相同，一并被复制过来了。
解决办法：删掉从库的这个文件，然后重启数据库，重新建立主从链接。

8、STOP SLAVE;
SHOW SLAVE STATUS\G
