1、3月25号早上9点15分左右，Android TextFun数据库因数据一致性导致302,303服务器的数据库服务down掉，虽然301的mysql还起着，
但wsrep_local_state_comment为Initialized，表示节点是非操作组件的一部分，这个状态的数据库是不会对外提供服务的，所以301也算是down的状态，
影响线上业务大约1个半小时。发现问题的时候其实还不知道301是不工作的，没有注意到是Initialized，以为能运行查看数据库状态脚本（sh status,sh）
就表示服务正常，然后自己就去找数据库停掉的原因去了，没有及时恢复服务。如果能尽早注意到这个值，就能尽可能的减小对线上业务的影响。要谨记这一点，
查看数据库是否正常不能只看脚本能不能运行，还有看数据库的同步状态。同时也可以借鉴wsrep_cluster_status的值，如果为non-Primary，
则也有可能是出现问题了。或者是wsrep_ready的值为OFF，则所有的数据库操作命令都不能被执行。

2、INSERT INTO table ... on duplicate key update... 语法可以有效的避免插入语句带来的主键冲突，但并不能解决集群两节点同时插入数据后数据同步
时出现的主键冲突。例如：节点A和B类并发的插入一条数据库不存在的记录，那么对于A和B分别来说都是新数据，要insert而不需要update，就会分别在AB两节点
执行数据插入操作，但在数据复制同步的时候就会出现主键冲突，数据一致性遭到破坏，数据库就有可能面临自己down掉的情况。
有效的解决办法：show status like 'wsrep_local_index'; 这个语句能够获取到某个节点在集群中的编号，请求分发到不同的节点，在插入语句中加入执行该
请求的节点编号，那么两个节点同时插入同样的数据时也不会出现主键冲突了。
