###server 端
sudo apt update
sudo apt install shadowsocks-libev

vi /etc/shadowsocks-libev/config.json

{
    "server":"0.0.0.0",
    "mode":"tcp_and_udp",
    "server_port":8388,
    "password":"Lf0gxBxiSihv",
    "timeout":60,
    "method":"chacha20-ietf-poly1305"
}

sudo systemctl restart shadowsocks-libev.service
sudo systemctl stop shadowsocks-libev.service

sudo systemctl enable shadowsocks-libev.service
sudo systemctl status shadowsocks-libev.service

sudo iptables -I INPUT -p tcp --dport 8838 -j ACCEPT
sudo iptables -I INPUT -p udp --dport 8838 -j ACCEPT
sudo ufw allow 8838


###client端，
###由于shadowsocks不直接提供http的代理，因此客户端也需要安装shadowsocks，同时使用privoxy转发请求至本地代理

sudo apt update
sudo apt install shadowsocks-libev

vi /etc/shadowsocks-libev/config.json

{
    "server":"18.206.99.246",
    "mode":"tcp_and_udp",
    "server_port":8388, 
	  "local_address":"127.0.0.1",
    "local_port":1080,
    "password":"Lf0gxBxiSihv",
    "timeout":60,
    "method":"chacha20-ietf-poly1305"
}

apt update
apt install lsof

nohup /usr/bin/ss-local -c /etc/shadowsocks-libev/config.json &

lsof -i:1080


sudo apt install privoxy
vi /etc/privoxy/config

# 转发设置为本地socks代理
forward-socks5t  /  127.0.0.1:1080 .
# 本地http代理监听端口
listen-address  127.0.0.1:8118

service privoxy status
service privoxy restart
service privoxy stop

###测试
export http_proxy="http://127.0.0.1:8118"
export https_proxy="http://127.0.0.1:8118"

unset http_proxy
unset https_proxy


curl www.google.com


