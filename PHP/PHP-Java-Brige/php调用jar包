php调用jar包通常使用php-java-bridge
1、环境搭建
①安装java
    sudo apt-get update
    sudo apt-get install default-jre
    sudo apt-get install default-jdk
    sudo add-apt-repository ppa:webupd8team/java
    sudo apt-get update
    sudo apt-get install oracle-java8-installer ---- Oracle JDK 8
②配置JAVA_HOME环境变量
    sudo update-alternatives --config java  ---- 选择默认版本
    sudo vi /etc/environment
    最后一行写入 JAVA_HOME="/usr/lib/jvm/java-8-oracle"
    source /etc/environment ---- 配置重载
    echo $JAVA_HOME ---- 如果输出的内容与写入的一致，则配置成成
③下载JavaBridge.jar ---- 用于搭建WEB服务器接口的核心JAVA应用程序包
    https://sourceforge.net/projects/php-java-bridge/files/Binary%20package/php-java-bridge_7.1.3/exploded/
④解压JavaBridge.jar
    jar -xvf JavaBridge.jar
    会生成一系列重要文件，比如Java.inc ---- 供PHP语言调用的方法包，主要是Java类。
⑤开启javabrige服务：java -jar JavaBridge.jar SERVLET_LOCAL:8080
    可能php.ini配置需要修改allow_url_include = On
    http://localhost:8088/，浏览器输入，如果显示目录列表则说明服务开启成功。
⑥测试：测试下面的代码，如果输出java相关的信息，则说明搭建成功。
<?php 
require_once("http://localhost:8088/java/Java.inc");
try {

  /* invoke java.lang.System.getProperties() */
  $props = java("java.lang.System")->getProperties();

  /* convert the result object into a PHP array */
  $array = java_values($props);
  foreach($array as $k=>$v) {
    echo "$k=>$v"; echo "<br>\n";
  }
  echo "<br>\n";

  /* create a PHP class which implements the Java toString() method */
  class MyClass {
    function toString() { return "hello PHP from Java!"; }
  }

  /* create a Java object from the PHP object */
  $javaObject = java_closure(new MyClass());
  echo "PHP says that Java says: "; echo $javaObject;  echo "<br>\n";
  echo "<br>\n";
  echo java("php.java.bridge.Util")->VERSION; echo "<br>\n";

} catch (JavaException $ex) {
  echo "An exception occured: "; echo $ex; echo "<br>\n";
}
?>
