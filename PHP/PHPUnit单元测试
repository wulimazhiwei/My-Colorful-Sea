1、单元测试：
  对单独的代码对象进行测试的过程，比如对函数、类、方法进行测试，以检查其返回值或行为是否符合预期。
  实际中软件是很复杂的，由许多组件构成，执行流程连贯在一起，要进行单元片段的测试，就需要为其提供执行上下文（或者说参数）和环境（比如打桩模拟一些对象）
来运行，并监控其行为和返回值，为此我们就需要写出做这件事情的程序代码，这样的代码叫做测试用例，许多测试用例有机结合在一起形成一个整体的测试，
又叫做测试套件，被测试的程序代码叫做生产代码。phpunit这个软件就是用来帮助我们写测试用例并进行测试的。

2、安装
运行：sudo apt-get install phpunit
运行：phpunit --version  输出以下信息说明安装成功
PHPUnit 5.1.3 by Sebastian Bergmann and contributors.

或者composer
composer require --dev phpunit/phpunit ^6.5
可选组件：PHP_Invoker，一个工具类，可以用带有超时限制的方式调用可调用内容。当需要在严格模式下保证测试的超时限制时，这个组件包是必须的。
composer require --dev phpunit/php-invoker
可选组件：DbUnit，移植到 PHP/PHPUnit 上的 DbUnit 用于提供对数据库交互测试的支持。
composer require --dev phpunit/dbunit

3、说明
A.通过composer安装的phpunit组件将会存在于vendor/phpunit/phpunit
B.PHPUnit 编写测试的基本惯例与步骤：
  a.针对类 Class 的测试写在类 ClassTest中。
  b.ClassTest（通常）继承自 PHPUnit_Framework_TestCase(PHPUnit\Framework\TestCase，需要引用vendor/autoload.php)。
  c.测试都是命名为 test* 的公用方法。也可以在方法的文档注释块(docblock)中使用 @test 标注将其标记为测试方法。
  d.在测试方法内，类似于 assertEquals()（参见 附录 A）这样的断言方法用来对实际值与预期值的匹配做出断言。
